<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<!-- 加载Spring的容器 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<!-- <param-value>/WEB-INF/classes/spring/applicationContext.xml</param-value> -->
		<param-value>classpath:spring/applicationContext*.xml</param-value>
		<!-- 下面一种方式配置的时候容易出现问题 -->
		<!-- <param-value>classpath*:spring/applicationContext*.xml</param-value> -->
	</context-param>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 前端控制器 -->
	<servlet>
		<servlet-name>springMvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- 加载前端控制器的配置文件 -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<!--配置文件的地址,如果不配置,则默认查找的是classpath下的:servlet名称+"-servler.xml",也就是springmvc-servlet.xml -->
			<!-- <param-value>classpath:springmvc/originalspringmvc/springmvc.xml</param-value> -->
			<param-value>classpath:springmvc/nowspringmvc/springmvc.xml</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>springMvc</servlet-name>
		<!-- 可以配置/,此工程所有请求全部由SpringMvc解析,此种方式可以实现RESTful方式,需要特殊处理,对静态文件的解析不能由SpringMvc解析 -->
		<!-- 可以配饰*.do或者*.action,所有请求的url的扩展名为.do和.action的时候由springmvc解析,此种方式比较常用; -->
		<!-- 不可以配置/*,如果这样配置,返回jsp也由springmvc进行解析,这是不对的 -->
		<url-pattern>*.action</url-pattern>
	</servlet-mapping>
</web-app>
